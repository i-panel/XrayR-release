version: "2.1"

services:

  TRAEFIK:
    image: "traefik:v2.9"
    container_name: "TRAEFIK"
    command:
      #- "--log.level=DEBUG"
      - "--api.insecure=true"
      - "--api.dashboard=true"
      - "--api.debug=true"
      - "--log.level=DEBUG"
      - "--log.filePath=/var/log/traefik/traefik.log"
      - "--accessLog=/var/log/traefik/access.log"
      - "--providers.docker=true"
      - "--providers.docker.exposedbydefault=false"
      - "--entrypoints.web.address=:80"
      # - --entrypoints.web.forwardedHeaders.insecure=true
      - --entrypoints.web.forwardedHeaders.trustedIPs=127.0.0.1/32
      #- --entrypoints.web.ProxyProtocol.insecure=true
      - --entrypoints.web.ProxyProtocol.trustedIPs=127.0.0.1/32
    labels:
      # - "traefik.http.routers.dashboard.rule=Host(`traefik.${DOMAIN}`)"
      # - "traefik.http.services.dashboard.loadbalancer.server.port=8080"
    ports:
      - "80:80"
      - "8080:8080"
    environment:
      - DOMAIN
    volumes:
      - ./logs/traefik:/var/log/traefik
      - "/var/run/docker.sock:/var/run/docker.sock:ro"

  # whoami:
  #   image: "traefik/whoami"
  #   container_name: "simple-service"
  #   labels:
  #     - "traefik.enable=true"
  #     - "traefik.http.routers.whoami.rule=Host(`whoami.${DOMAIN}`)"
  #     - "traefik.http.routers.whoami.entrypoints=web"
      
  # whoami2:
  #   image: "traefik/whoami"
  #   container_name: "simple-service2"
  #   labels:
  #     - "traefik.enable=true"
  #     - "traefik.http.routers.whoami2.rule=Host(`whoami.${DOMAIN}`) && PathPrefix(`/h2`)"
  #     - "traefik.http.routers.whoami2.entrypoints=web"
  
  nginx:
    container_name: nginx
    image: nginx:latest
    restart: unless-stopped
    environment:
      - DOMAIN
      - CDN
    links:
      #  - XRAYR:XRAYR
       - SSPANEL:SSPANEL
       - TRAEFIK:TRAEFIK
    # depends_on:
    #   - XRAYR
    expose:
      - 443
    volumes:
      - ./logs/nginx:/var/log/nginx
      - ./etc/nginx/templates/nginx.conf:/etc/nginx/nginx.conf
      - ./etc/nginx/templates:/etc/nginx/templates:ro
      - ./etc/letsencrypt:/etc/letsencrypt:ro
      - ./certbot/data:/var/www/certbot
  certbot:
    container_name: certbot
    image: certbot/certbot:latest
    depends_on:
      - nginx
    environment:
      - DOMAIN
    command: >-
             certonly --reinstall --webroot --webroot-path=/var/www/certbot
             --email ${EMAIL} --agree-tos --no-eff-email
             -d ${DOMAIN}
    volumes:
      - ./etc/letsencrypt:/etc/letsencrypt
      - ./certbot/data:/var/www/certbot
  SSPANEL:
    image: ttracy/panel
    container_name: SSPANEL
    restart: always
    labels:
      traefik.enable: true
      traefik.http.routers.sspanel.rule: Host(`${DOMAIN}`)
      traefik.http.routers.sspanel.service: sspanel
      traefik.http.routers.sspanel.entrypoints: web
      # traefik.http.services.sspanel.loadbalancer.server.port: 8080
    volumes:
      - ./config/.config.php:/var/www/config/.config.php
    depends_on:
      mariadb:
        condition: service_healthy
    environment:
      SSPANEL_KEY: ChangeMe
      SSPANEL_APP_NAME: SSPanel-UIM
      SSPANEL_BASEURL: https://${DOMAIN}
      SSPANEL_MUKEY: SSPANEL
      SSPANEL_ADMIN_EMAIL: admin@${DOMAIN}.com
      SSPANEL_ADMIN_PASSWORD: V3ryL0ngP@ssw0rd
      DEBUG: "false"
      TIME_ZONE: Asia/Tehran
      STREAMING_UNLOCK: "false"
      GITHUB_ACCESS_TOKEN:
      ENABLE_TELEGRAM: "false"
      TELEGRAM_TOKEN:
      TELEGRAM_CHAT_ID:
      TELEGRAM_BOT: EXAMPLE_bot
      TELEGRAM_LOGIN: "false"
      B2_BACKUP_NAME: SSPANEL
      B2_BACKUP: "false"
      B2_APP_KEY_ID:
      B2_APP_KEY:
      B2_BUCKET_NAME:
      B2_COMPRESS_METHOD: zip
      DB_HOST: ss_db
      DB_PORT: 3306
      DB_DATABASE: sspanel
      DB_PASSWORD: sspanel
      DB_USERNAME: root
  mariadb:
    image: mariadb:10.9
    container_name: ss_db
    restart: always
    command: ['mysqld', '--character-set-server=utf8mb4', '--collation-server=utf8mb4_unicode_ci']
    environment:
      MYSQL_ROOT_PASSWORD: sspanel
      MYSQL_DATABASE: sspanel
    healthcheck:
      test: ["CMD", "mysqladmin" ,"ping", "-h", "localhost"]
      timeout: 20s
      retries: 10
  phpmyadmin:
    image: phpmyadmin
    container_name: phpmyadmin
    restart: always
    depends_on:
      mariadb:
        condition: service_healthy
    environment:
      - PMA_ARBITRARY=1
