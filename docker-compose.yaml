version: "2.1"

services:

  TRAEFIK:
    image: "traefik:v2.9"
    container_name: "TRAEFIK"
    command:
      #- "--log.level=DEBUG"
      - "--api.insecure=true"
      - "--api.dashboard=true"
      - "--api.debug=true"
      - "--log.level=DEBUG"
      - "--log.filePath=/var/log/traefik/traefik.log"
      - "--accessLog=/var/log/traefik/access.log"
      - "--providers.docker=true"
      - "--providers.docker.exposedbydefault=false"
      - "--entrypoints.web.address=:80"
      # - --entrypoints.web.forwardedHeaders.insecure=true
      - --entrypoints.web.forwardedHeaders.trustedIPs=127.0.0.1/32
      #- --entrypoints.web.ProxyProtocol.insecure=true
      - --entrypoints.web.ProxyProtocol.trustedIPs=127.0.0.1/32
    # labels:
      # - "traefik.http.routers.dashboard.rule=Host(`traefik.${DOMAIN}`)"
      # - "traefik.http.services.dashboard.loadbalancer.server.port=8080"
    ports:
      - "80:80"
      - "8080:8080"
    environment:
      - DOMAIN
    volumes:
      - ./logs/traefik:/var/log/traefik
      - "/var/run/docker.sock:/var/run/docker.sock:ro"
  NGINX:
    container_name: NGINX
    image: nginx:latest
    restart: unless-stopped
    environment:
      - DOMAIN
      - CDN
    links:
      #  - XRAYR:XRAYR
       - SSPANEL:SSPANEL
       - TRAEFIK:TRAEFIK
    # depends_on:
    #   - XRAYR
    ports:
      - 443:443
    expose:
      - 443
    volumes:
      - ./logs/nginx:/var/log/nginx
      - ./etc/nginx/templates/nginx.conf:/etc/nginx/nginx.conf
      - ./etc/nginx/templates:/etc/nginx/templates:ro
      - ./etc/letsencrypt:/etc/letsencrypt:ro
      - ./certbot/data:/var/www/certbot
  CERTBOT:
    container_name: CERTBOT
    image: certbot/certbot:latest
    depends_on:
      - NGINX
    environment:
      - DOMAIN
    command: >-
             certonly --reinstall --webroot --webroot-path=/var/www/certbot
             --email ${EMAIL} --agree-tos --no-eff-email
             -d ${DOMAIN}
    volumes:
      - ./etc/letsencrypt:/etc/letsencrypt
      - ./certbot/data:/var/www/certbot
  SSPANEL:
    image: ttracy/panel
    container_name: SSPANEL
    restart: always
    expose: 
      - 80
    labels:
      traefik.enable: true
      traefik.http.routers.sspanel.rule: Host(`${DOMAIN}`)
      traefik.http.routers.sspanel.entrypoints: web
      # traefik.http.services.sspanel.loadbalancer.server.port: 8080
    volumes:
      - ./panel:/var/www/config
    depends_on:
      MARIADB:
        condition: service_healthy
    environment:
      SSPANEL_KEY: ChangeMe
      SSPANEL_APP_NAME: SSPanel-UIM
      SSPANEL_BASEURL: https://${DOMAIN}
      SSPANEL_MUKEY: SSPANEL
      SSPANEL_ADMIN_EMAIL: admin@${DOMAIN}.com
      SSPANEL_ADMIN_PASSWORD: V3ryL0ngP@ssw0rd
      DEBUG: "false"
      TIME_ZONE: Asia/Tehran
      STREAMING_UNLOCK: "false"
      GITHUB_ACCESS_TOKEN:
      ENABLE_TELEGRAM: "false"
      TELEGRAM_TOKEN:
      TELEGRAM_CHAT_ID:
      TELEGRAM_BOT: EXAMPLE_bot
      TELEGRAM_LOGIN: "false"
      B2_BACKUP_NAME: SSPANEL
      B2_BACKUP: "false"
      B2_APP_KEY_ID:
      B2_APP_KEY:
      B2_BUCKET_NAME:
      B2_COMPRESS_METHOD: zip
      DB_HOST: MARIADB
      DB_PORT: 3306
      DB_DATABASE: sspanel
      DB_PASSWORD: sspanel
      DB_USERNAME: root
  MARIADB:
    image: mariadb:10.9
    container_name: MARIADB
    restart: always
    command: ['mysqld', '--character-set-server=utf8mb4', '--collation-server=utf8mb4_unicode_ci']
    environment:
      MYSQL_ROOT_PASSWORD: sspanel
      MYSQL_DATABASE: sspanel
    healthcheck:
      test: ["CMD", "mysqladmin" ,"ping", "-h", "localhost"]
      timeout: 20s
      retries: 10
  PHPMYADMIN:
    image: phpmyadmin
    container_name: PHPMYADMIN
    restart: always
    depends_on:
      MARIADB:
        condition: service_healthy
    environment:
      - PMA_ARBITRARY=1

  # whoami:
  #   image: "traefik/whoami"
  #   container_name: "simple-service"
  #   labels:
  #     - "traefik.enable=true"
  #     - "traefik.http.routers.whoami.rule=Host(`whoami.${DOMAIN}`)"
  #     - "traefik.http.routers.whoami.entrypoints=web"
      
  # whoami2:
  #   image: "traefik/whoami"
  #   container_name: "simple-service2"
  #   labels:
  #     - "traefik.enable=true"
  #     - "traefik.http.routers.whoami2.rule=Host(`whoami.${DOMAIN}`) && PathPrefix(`/h2`)"
  #     - "traefik.http.routers.whoami2.entrypoints=web"
  

  xray_vlessws:
    image: ghcr.io/kontorol/xrayr:latest
    container_name: xray_vlessws
    restart: unless-stopped
    depends_on:
      - TRAEFIK
    environment:
      TZ: Asia/Tehran
      ## Log
      LOG_LEVEL: warning # Log level: none, error, warning, info, debug 
      LOG_ACCESS_PATH: /etc/XrayR/access.Log
      LOG_ERROR_PATH: /etc/XrayR/error.log
      ## Custom Rule
      DNS_CONFIG_PATH: /etc/XrayR/dns.json # Path to dns config, check https://xtls.github.io/config/dns.html for help
      ROUTE_CONFIG_PATH: /etc/XrayR/route.json # Path to route config, check https://xtls.github.io/config/routing.html for help
      INBOUND_CONFIG_PATH: /etc/XrayR/custom_inbound.json # Path to custom inbound config, check https://xtls.github.io/config/inbound.html for help
      OUTBOUND_CONFIG_PATH: /etc/XrayR/custom_outbound.json # Path to custom outbound config, check https://xtls.github.io/config/outbound.html for help
      ## ConnectionConfig
      HANDSHAKE: 4 # Handshake time limit, Second
      CONN_IDLE: 30 # Connection idle time limit, Second
      UPLINK_ONLY: 2 # Time limit when the connection downstream is closed, Second
      DOWNLINK_ONLY: 4 # Time limit when the connection is closed after the uplink is closed, Second
      BUFFER_SIZE: 64 # The internal cache size of each connection, kB
      ## Nodes
      PANEL_TYPE: "SSpanel" # Panel type: SSpanel, V2board, NewV2board, PMpanel, Proxypanel, V2RaySocks
      ## ApiConfig
      API_HOST: "http://127.0.0.1:667"
      API_KEY: "123"
      NODE_ID: 41
      NODE_TYPE: V2ray # Node type: V2ray, Shadowsocks, Trojan, Shadowsocks-Plugin
      NODE_TIMEOUT: 30 # Timeout for the api request
      ENABLE_VLESS: "false" # Enable Vless for V2ray Type
      ENABLE_XTLS: "true" # Enable XTLS for V2ray and Trojan
      NODE_SPEED_LIMIT: 0 # Mbps, Local settings will replace remote settings, 0 means disable
      NODE_DEVICE_LIMIT: 0 # Local settings will replace remote settings, 0 means disable
      NODE_RULE_LIST_PATH: /etc/XrayR/rulelist #Path to local rulelist file
      ## ControllerConfig
      LISTEN_IP: 0.0.0.0 # IP address you want to listen
      SEND_IP: 0.0.0.0 # IP address you want to send pacakage
      UPDATE_PERIODIC: 60 # Time to update the nodeinfo, how many sec.
      ENABLE_DNS: "false" # Use custom DNS config, Please ensure that you set the dns.json well
      DNS_TYPE: AsIs # AsIs, UseIP, UseIPv4, UseIPv6, DNS strategy
      ENABLE_PROXY_PROTOCOL: "false" # Only works for WebSocket and TCP
      ## AutoSpeedLimitConfig
      SPEED_LIMIT: 0 # Warned speed. Set to 0 to disable AutoSpeedLimit (mbps)
      SPEED_WARN_TIMES: 0 # After (WarnTimes) consecutive warnings, the user will be limited. Set to 0 to punish overspeed user immediately.
      SPEED_LIMIT_SPEED: 0 # The speedlimit of a limited user (unit: mbps)
      SPEED_LIMIT_DURATION: 0 # How many minutes will the limiting last (unit: minute)
      ## GlobalDeviceLimitConfig
      RADIS_ENABLE: "false" # Enable the global device limit of a user
      RADIS_ADDR: 127.0.0.1:6379 # The redis server address
      RADIS_PASSWORD: YOUR PASSWORD # Redis password
      RADIS_DB: 0 # Redis DB
      RADIS_TIME_OUT: 5 # Timeout for redis request
      RADIS_EXPIRY: 60 # Expiry time (second)
      ## FallBackConfigs:  # Support multiple fallbacks
      FALLBACK_ENABLE: "false" # Only support for Trojan and Vless
      FALLBACK_SNI: # TLS SNI(Server Name Indication), Empty for any
      FALLBACK_ALPN: # Alpn, Empty for any
      FALLBACK_PATH: # HTTP PATH, Empty for any
      FALLBACK_DEST: # Required, Destination of fallback, check https://xtls.github.io/config/features/fallback.html for details.
      FALLBACK_PROXY_PROTOCOL_VER: 2 # Send PROXY protocol version, 0 for dsable
      ## CertConfig
      CERT_MODE: none # Option about how to get certificate: none, file, http, tls, dns. Choose "none" will forcedly disable the tls config.
      CERT_DOMAIN: "node1.test.com" # Domain to cert
      CERT_FILE: /etc/XrayR/cert/node1.test.com.cert # Provided if the CertMode is file
      CERT_KEY_FILE: /etc/XrayR/cert/node1.test.com.key
      CERT_PROVIDER: alidns # DNS cert provider, Get the full support list here: https://go-acme.github.io/lego/dns/
      CERT_EMAIL: test@me.com
      ## DNSEnv: # DNS ENV option used by DNS provider
      CERT_CLOUD_ACCESS_KEY: aaa
    volumes:
      - ./config:/etc/XrayR
    expose:
      - 3005
    labels:
      traefik.enable: true
      traefik.http.routers.xray_vlessws.rule: Host(`${DOMAIN}`) && Path(`/vlessws`)
      traefik.http.routers.xray_vlessws.service: xray_vlessws
      traefik.http.routers.xray_vlessws.entrypoints: web
      traefik.http.services.xray_vlessws.loadbalancer.server.port: 3005
   